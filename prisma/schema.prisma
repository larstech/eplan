generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma/client"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Employee {
  id String @id @default(uuid())

  firstName String
  lastName  String

  calendar Calendar[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Customer {
  id String @id @default(uuid())

  companyName       String
  travelTimeMinutes Int
  breakTimeMinutes  Int
  notes             String

  addressId String @unique
  contactId String @unique

  job Job[]

  address Address         @relation(fields: [addressId], references: [id])
  contact CustomerContact @relation(fields: [contactId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Address {
  id String @id @default(uuid())

  country     String
  postalCode  String
  houseNumber String
  street      String
  city        String

  customer Customer?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CustomerContact {
  id String @id @default(uuid())

  firstName   String
  lastName    String
  phoneNumber String

  customer Customer?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Job {
  id String @id @default(uuid())

  orderId     Int
  title       String
  description String

  customerId String

  calendar Calendar[]

  customer Customer @relation(fields: [customerId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Calendar {
  id String @id @default(cuid(2))

  date      DateTime
  startTime DateTime
  endTime   DateTime

  jobId      String
  employeeId String

  job      Job      @relation(fields: [jobId], references: [id])
  employee Employee @relation(fields: [employeeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
